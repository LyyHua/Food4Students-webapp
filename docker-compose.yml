services:
  postgres:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=postgrespw
    ports:
      - 5432:5432
    volumes:
      - /var/lib/postgresql/data
  mongodb:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=mongopw
    ports:
      - 27017:27017
    volumes:
      - /data/db
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
  # restaurant-svc:
  #   image: lyyhua/restaurant-svc:latest
  #   build:
  #     context: .
  #     dockerfile: src/RestaurantService/Dockerfile
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Development
  #     - ASPNETCORE_URLS=http://+:80
  #     - ConnectionStrings__DefaultConnection=Server=postgres;User Id=postgres;Password=postgrespw;Database=restaurant
  #     - RabbitMq__Host=rabbitmq
  #     - IdentityServiceUrl=http://identity-svc
  #     - Kestrel__Endpoints__WebApi__Protocols=Http1
  #     - Kestrel__Endpoints__WebApi__Url=http://+:80
  #   ports:
  #     - 7001:80
  #   depends_on:
  #     - postgres
  #     - rabbitmq
  # search-svc:
  #   image: lyyhua/search-svc:latest
  #   build:
  #     context: .
  #     dockerfile: src/SearchService/Dockerfile
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Development
  #     - ASPNETCORE_URLS=http://+:80
  #     - RabbitMq__Host=rabbitmq
  #     - ConnectionStrings__MongoDbConnection=mongodb://root:mongopw@mongodb
  #     - RestaurantServiceUrl=http://restaurant-svc
  # order-svc:
  #   image: lyyhua/order-svc:latest
  #   build:
  #     context: .
  #     dockerfile: src/OrderService/Dockerfile
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Development
  #     - ASPNETCORE_URLS=http://+:80
  #     - RabbitMq__Host=rabbitmq
  #     - ConnectionStrings__OrderDbConnection=mongodb://root:mongopw@mongodb
  #     - IdentityServiceUrl=http://identity-svc
  #   ports:
  #     - 7003:80
  #   depends_on:
  #     - mongodb
  #     - rabbitmq
  # identity-svc:
  #   image: lyyhua/identity-svc:latest
  #   build:
  #     context: .
  #     dockerfile: src/IdentityService/Dockerfile
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Docker
  #     - ASPNETCORE_URLS=http://+:80
  #     - IssuerUri=http://id.food4students.local
  #     - ClientApp=http://app.food4students.local
  #     - ConnectionStrings__DefaultConnection=Server=postgres;User Id=postgres;Password=postgrespw;Database=identity
  #     - VIRTUAL_HOST=id.food4students.local
  #   depends_on:
  #     - postgres
  # notify-svc:
  #   image: lyyhua/notify-svc:latest
  #   build:
  #     context: .
  #     dockerfile: src/NotificationService/Dockerfile
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Development
  #     - ASPNETCORE_URLS=http://+:80
  #     - RabbitMq__Host=rabbitmq
  #   ports:
  #     - 7006:80
  #   depends_on:
  #     - rabbitmq
  # nginx-proxy:
  #   image: nginxproxy/nginx-proxy
  #   container_name: nginx-proxy
  #   ports:
  #     - 80:80
  #     - 443:443
  #   volumes:
  #     - /var/run/docker.sock:/tmp/docker.sock:ro
  #     - ./devcerts:/etc/nginx/certs